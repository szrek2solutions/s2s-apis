openapi: 3.1.0
info:
  title: S2S RNG API (Draft)
  version: 2.0.0
  description: Szrek2Solutions Random Number Generator API.
  contact:
    url: 'http://www.szrek.com'
    email: info@szrek.com
servers:
  - description: Local Server
    url: 'http://localhost:55002/api/v2/rng'
components:
  schemas:
    ClientInfo:
      type: object
      properties:
        clientId:
          type: string
          description: Name or identifier of the client system.
          example: GAMESERVER-1
        clientTransactionId:
          type: integer
          description: Client's unique identifier for this transaction.
          format: int64
          example: 102030450
        clientTime:
          type: string
          format: date-time
          description: Time on the client system.
          example: '2020-09-30T18:30:23Z'
        clientBusinessDay:
          type: integer
          description: Client's current business day. Format is YYMMDD.
          example: 200930
      x-internal: true
    ServerInfo:
      type: object
      x-internal: true
      properties:
        serverId:
          type: string
          example: RNG-TEST-87
          description: Transaction server identifier.
        serverVersion:
          type: string
          example: '9.3'
          description: Transaction server version number.
      readOnly: true
    TestMode:
      type: boolean
      description: Indicates that the draw is a test only and not valid for use.
      x-userDataIndex: 1
      x-internal: true
    DrawUser:
      type: object
      description: Draw participant's name and login time as used in the draw reports.
      properties:
        name:
          type: string
          description: Full name of the user as it should appear in the draw reports.
          example: John Smith
        loginTime:
          type: string
          format: date-time
          description: The time that the user logged into the draw GUI
          example: '2020-03-15T15:47:44Z'
      x-internal: true
    DrawUsers:
      description: 'Participants conducting the draw. The first user is the Draw Manager, second user is the Draw Auditor, and third is the Draw Observer.'
      type: array
      items:
        $ref: '#/components/schemas/DrawUser'
      x-internal: true
    Distribution:
      type: object
      description: Initial distribution values and depletion type. Used for TABLE products only.
      x-examples: {}
      properties:
        values:
          type: array
          description: Initial distribution values.
          maxItems: 64
          items:
            type: integer
            example: 8
        depletionType:
          type: string
          enum:
            - NO_DEPLETION
            - DECREASE_ENTRY
            - REMOVE_ENTRY
          description: Specifies method of depletion for the distribution values.
          example: NO_DEPLETION
          readOnly: true
      x-internal: true
    DrawMatrix:
      type: object
      description: The complete RNG parameter matrix. The product definition may or may not allow overriding of these values.
      properties:
        setSize:
          type: integer
          description: How many numbers in each set.
          example: 6
          minimum: 1
        minValue:
          type: integer
          description: Lowest number that can be generated.
          example: 1
        maxValue:
          type: integer
          description: Highest number that can be generated.
          example: 49
        withReplacement:
          type: boolean
          description: True if generated numbers can be repeated within a set.
          readOnly: true
        sortOrder:
          type: string
          description: Sort order for the generated numbers within a set.
          enum:
            - UNSORTED
            - ASCENDING
          examples:
            - UNSORTED
          readOnly: true
        exclusions:
          type: array
          description: Values to be excluded from the generation.
          uniqueItems: true
          maxItems: 65535
          items:
            type: integer
          example:
            - 10
            - 30
            - 53
        distribution:
          $ref: '#/components/schemas/Distribution'
      required:
        - numberOfSets
      x-internal: true
    ClientData:
      type: array
      description: Optional data fields that are signed and logged. They can also be extracted and used in post-processing and reports.
      x-internal: true
      example:
        - A data field
        - Another data field
      items:
        type: string
    UserData:
      type: array
      description: DEPRECATED. Optional text fields that are signed and logged. If used it is incompatible with many of the other Draw fields and will replace their values.
      x-internal: true
      deprecated: true
      items:
        type: string
        example: some data field some other data
    StatusCode:
      type: integer
      description: Numeric error or status code.
      example: 0
      x-internal: true
      readOnly: true
    StatusDescription:
      type: string
      description: Short description of the error or status code.
      example: Success
      x-internal: true
      readOnly: true
    Status:
      type: object
      x-internal: true
      properties:
        code:
          type: integer
          description: Numeric error or status code.
          example: 0
          readOnly: true
        text:
          type: string
          description: Short description of the error or status code.
          example: Success
          readOnly: true
      readOnly: true
    TransactionStatus:
      type: object
      description: Overall status of the batch request.
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/StatusCode'
        text:
          $ref: '#/components/schemas/StatusDescription'
      readOnly: true
    DrawStatus:
      type: object
      description: Status of the draw request.
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/StatusCode'
        text:
          $ref: '#/components/schemas/StatusDescription'
      readOnly: true
    VerificationStatus:
      type: object
      description: Status of the verification request.
      x-internal: true
      properties:
        code:
          $ref: '#/components/schemas/StatusCode'
        text:
          $ref: '#/components/schemas/StatusDescription'
      readOnly: true
    DrawInput:
      x-internal: true
      type: object
      properties:
        productId:
          type: integer
          description: Identifier of the product definition used for the draw generation.
          example: 1002
        numberOfSets:
          type: integer
          description: How many sets of numbers to generate.
          minimum: 1
          example: 1
        drawMatrix:
          $ref: '#/components/schemas/DrawMatrix'
        drawNumber:
          type: integer
          example: 1
          description: Draw number for this draw.
          minimum: 1
        drawHash:
          type: string
          description: 'Hash of some draw data such as all bets, or a file containing draw input data. Typically SHA-1 in ASCII hex format.'
          format: binary
          example: B63C77E06612D820BC3BE72877C74F257B562A20
        drawFile:
          type: string
          description: 'If drawHash contains a file hash, the name of the file is specified here. Mutually exclusive with drawText.'
          example: BETS_20210312_123_LOTTO6.dat
        drawText:
          type: string
          description: An extra text string that will appear in the draw reports and is also appended to the draw report file names. Mutually exclusive with drawFile.
          example: PROMO-1
        clientData:
          $ref: '#/components/schemas/ClientData'
        userData:
          $ref: '#/components/schemas/UserData'
    DrawOutput:
      x-internal: true
      type: object
      properties:
        recordId:
          type: string
          description: Unique record identifier (URI) of the draw.
          example: EX191109870000000125
          readOnly: true
        recordHandle:
          type: integer
          description: A look-up handle that can optionally be used for faster verification processing.
          format: int64
          readOnly: true
        timestamp:
          type: string
          format: date-time
          description: Date and time the draw results were generated.
          example: '2020-09-30T18:30:23Z'
          readOnly: true
        sets:
          $ref: '#/components/schemas/NumberSets'
    SecurityRequest:
      type: object
      description: 'Security blocks are used to authenticate various elements of the transaction. It can be an encrypted ICS block, product checksums, etc.'
      x-internal: true
      properties:
        id:
          type: string
          description: Security block type identifier.
          example: S2S
        version:
          type: string
          description: Format version of the security block.
          example: '1.0'
      required:
        - id
    SecurityRequests:
      type: array
      items:
        $ref: '#/components/schemas/SecurityRequest'
      x-internal: true
    SecurityBlock:
      description: 'Security blocks are used to authenticate various elements of the transaction. It can be an encrypted ICS block, product checksums, etc.'
      x-internal: true
      title: ''
      allOf:
        - $ref: '#/components/schemas/SecurityRequest'
        - type: object
          properties:
            keyId:
              type: string
              description: 'Identifier of the public key needed to verify the security block, if applicable.'
              example: 308C-1328-3940-DC32
              readOnly: true
            data:
              type: string
              description: Base 64 encoded content of the security block.
              example: VGhpcyBpcyBhbiBleGFtcGxl
              readOnly: true
    SecurityBlocks:
      type: array
      items:
        $ref: '#/components/schemas/SecurityBlock'
      x-internal: true
    SecurityModule:
      type: object
      description: Details about the cryptographic Hardware Security Module (HSM).
      properties:
        serial:
          type: string
          description: Serial number of the HSM.
          example: 01000000F00019C8
        sequencer:
          type: integer
          description: Sequence number on the HSM.
          example: 734595
        time:
          type: string
          description: Real-time clock value on the HSM.
          example: '2020-09-30T18:30:23Z'
        keyId:
          type: string
          description: Identifier of the RSA key pair on the HSM.
          example: 308C-1328-3940-DC32
      x-internal: true
    ExtractFields:
      type: array
      description: Name/value pairs as would be generated in a CSV extract file.
      x-internal: true
      items:
        type: object
        description: ''
        properties:
          name:
            type: string
            description: Column name for the CSV extract field.
          value:
            type: string
            description: 'Value of the extract field, formatted for CSV.'
    FieldError:
      type: object
      description: Details about a specific field error.
      properties:
        code:
          type: string
          description: Error code name.
        message:
          type: string
          description: Additional detail about the error code.
        fieldName:
          type: string
          description: 'Name of the field that caused the error, if applicable.'
        path:
          type: string
          description: 'Path to the field that caused the error, if applicable.'
      x-internal: false
    ErrorResponse:
      description: Describes the error and any specific problems with fields in the request.
      allOf:
        - $ref: '#/components/schemas/Status'
        - type: object
          properties:
            fieldErrors:
              type: array
              items:
                $ref: '#/components/schemas/FieldError'
    NumberSet:
      type: array
      items:
        type: integer
      example:
        - 25
        - 5
        - 41
        - 17
        - 1
      x-internal: true
    NumberSets:
      type: array
      description: Numbers generated.
      items:
        $ref: '#/components/schemas/NumberSet'
      readOnly: true
      x-internal: true
  responses:
    BadRequestResponse:
      description: Bad Request
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            Input Validation Failed:
              value:
                code: 999
                description: Input validation failed.
                fieldErrors:
                  - code: INVALID_VALUE
                    message: Product not found
                    fieldName: productId
                    path: 'drawRequests[1].productId'
  securitySchemes: {}
paths:
  /draws:
    post:
      summary: Generate Draw Records
      operationId: post-draws
      description: Draw random numbers for one or more draw products.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerInfo'
                  - $ref: '#/components/schemas/ClientInfo'
                  - type: object
                    properties:
                      transactionStatus:
                        $ref: '#/components/schemas/TransactionStatus'
                      businessDay:
                        type: integer
                        description: Business day under which the transaction was recorded. Format is YYMMDD.
                        example: 200930
                        readOnly: true
                      testMode:
                        $ref: '#/components/schemas/TestMode'
                      drawUsers:
                        $ref: '#/components/schemas/DrawUsers'
                      drawRecords:
                        type: array
                        description: Array of draw records.
                        items:
                          allOf:
                            - type: object
                              properties:
                                drawStatus:
                                  $ref: '#/components/schemas/DrawStatus'
                                clientRecordId:
                                  type: string
                                  description: Client's unique identifier for this draw.
                                  example: RQID-31234545-32
                            - $ref: '#/components/schemas/DrawInput'
                            - $ref: '#/components/schemas/DrawOutput'
                            - type: object
                              properties:
                                securityBlocks:
                                  $ref: '#/components/schemas/SecurityBlocks'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Input Validation Failed:
                  value:
                    code: 999
                    description: Input validation failed.
                    fieldErrors:
                      - code: INVALID_VALUE
                        message: Product not found
                        fieldName: productId
                        path: 'draw[1].productId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClientInfo'
                - type: object
                  properties:
                    testMode:
                      $ref: '#/components/schemas/TestMode'
                    users:
                      $ref: '#/components/schemas/DrawUsers'
                    drawRecords:
                      type: array
                      description: Array of draw request records.
                      minItems: 1
                      maxItems: 25
                      items:
                        allOf:
                          - type: object
                            properties:
                              clientRecordId:
                                type: string
                                description: Client's unique identifier for this draw.
                                example: RQID-31234545-32
                          - $ref: '#/components/schemas/DrawInput'
                          - type: object
                            properties:
                              securityBlocks:
                                $ref: '#/components/schemas/SecurityRequests'
            examples: {}
      parameters: []
      tags:
        - Draws
    parameters: []
  /server/status:
    get:
      summary: Get Draw Server Status
      description: Get current status of the RNG server and the configured products.
      operationId: get-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerInfo'
                  - type: object
                    properties:
                      serverTime:
                        type: string
                        format: date-time
                        description: Current system time of the RNG server.
                        example: '2020-09-30T18:30:23Z'
                      businessDay:
                        type: integer
                        description: Current business day for this RNG server. Format is YYMMDD.
                        example: 200930
                      products:
                        type: array
                        description: Configured products and status.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Product identifier.
                              example: 1001
                            name:
                              type: string
                              description: Product name.
                              example: Pick3
                            type:
                              type: string
                              enum:
                                - INTEGER
                                - TABLE
                                - LOTTO
                              examples:
                                - INTEGER
                              description: The configured RNG algorithm type for the product.
                              example: INTEGER
                            requestCount:
                              type: integer
                              description: Current total number of RNG requests for this product.
                              example: 324
                            lastRequestTime:
                              type: string
                              description: The time of the last RNG request for this product.
                              format: date-time
                              example: '2020-09-30T18:30:23Z'
                            distribution:
                              type: array
                              description: Current distribution values. Applies to TABLE type products only
                              items:
                                type: integer
                                maximum: 64
                              example:
                                - 8
                                - 8
                                - 8
                                - 8
                                - 8
                            distributionOverride:
                              type: array
                              items:
                                type: integer
                                maximum: 64
                      securityModules:
                        type: array
                        description: Status of the configured hardware security modules (HSMs).
                        items:
                          allOf:
                            - type: object
                              properties:
                                active:
                                  type: boolean
                                  description: Indicates if this is the currently active HSM or not.
                                  example: true
                                status:
                                  type: string
                                  description: Current status description for this HSM.
                            - $ref: '#/components/schemas/SecurityModule'
                            - type: object
                              properties:
                                lastErrorCode:
                                  type: integer
                                  description: 'The error code of the most recent HSM error, if any.'
                                  example: 0
                                lastErrorTime:
                                  type: string
                                  description: 'The time of the last error code, if any.'
                                  format: date-time
                                  example: '2020-09-30T18:30:23Z'
              examples: {}
      tags:
        - Status
    parameters: []
  /verifications:
    parameters: []
    post:
      summary: Verify Draw Record
      description: Verifies a previously generated RNG draw record and returns the draw detail.
      operationId: post-verifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ServerInfo'
                  - type: object
                    properties:
                      verificationStatus:
                        $ref: '#/components/schemas/VerificationStatus'
                      testMode:
                        $ref: '#/components/schemas/TestMode'
                      drawUsers:
                        $ref: '#/components/schemas/DrawUsers'
                      drawRecord:
                        allOf:
                          - $ref: '#/components/schemas/DrawInput'
                          - $ref: '#/components/schemas/DrawOutput'
                      hsm:
                        $ref: '#/components/schemas/SecurityModule'
                      extractFields:
                        $ref: '#/components/schemas/ExtractFields'
        '400':
          description: Bad Request
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recordId:
                  type: string
                  description: The Unique Record Identifier (URI) of the record to be verified.
                  example: EX210622870000000335
                recordHandle:
                  type: string
                  description: The recordHandle that was returned in RNG response. Including this parameter may improve response time.
                  example: '184638'
              required:
                - recordId
        description: ''
      tags:
        - Verifications
security: []
tags:
  - name: Draws
    description: Operations related to draw records.
  - name: Verifications
    description: Operations related to verifying draw records.
  - name: Status
    description: Operations related to querying the draw server configuration and status.
